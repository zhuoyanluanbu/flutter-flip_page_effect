def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.flip_page_effect"
        minSdkVersion localProperties.getProperty('flutter.minSdkVersion')
        targetSdkVersion localProperties.getProperty('flutter.targetSdkVersion')
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
//        debug {
//            ndk { //这里要加上，否则debug包会出问题,后面三个为可选，x86建议加上不然部分模拟器回报错
//                abiFilters "armeabi",  "armeabi-v7a" , "arm64-v8a" , "x86","x86_64"
//            }
//        }
//        release {
////            // TODO: Add your own signing config for the release build.
////            // Signing with the debug keys for now, so `flutter run --release` works.
////            signingConfig signingConfigs.debug
//            ndk {
//                // The line below only builds arm64-v8a
//                abiFilters  'arm64-v8a' // This breaks running the app in the emulator
//                abiFilters 'armeabi-v7a','arm64-v8a','x86_64' // this includes all build targets
//            }
//        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

